
Unit7_L1_GPIO_Assginment_EclipseProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000020a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000288  00000000  00000000  00000260  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000002d2  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 6a 00 	call	0xd4	; 0xd4 <main>
  64:	0c 94 03 01 	jmp	0x206	; 0x206 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <delay>:

typedef enum {
	LED_RED, LED_GREEN, LED_BLUE, Buzzer
} deviceToOperate;

void delay(unsigned long n) {
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	28 97       	sbiw	r28, 0x08	; 8
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	6d 83       	std	Y+5, r22	; 0x05
  82:	7e 83       	std	Y+6, r23	; 0x06
  84:	8f 83       	std	Y+7, r24	; 0x07
  86:	98 87       	std	Y+8, r25	; 0x08
	unsigned long i;
	for (i = 0; i < n; ++i)
  88:	19 82       	std	Y+1, r1	; 0x01
  8a:	1a 82       	std	Y+2, r1	; 0x02
  8c:	1b 82       	std	Y+3, r1	; 0x03
  8e:	1c 82       	std	Y+4, r1	; 0x04
  90:	0b c0       	rjmp	.+22     	; 0xa8 <delay+0x3c>
  92:	89 81       	ldd	r24, Y+1	; 0x01
  94:	9a 81       	ldd	r25, Y+2	; 0x02
  96:	ab 81       	ldd	r26, Y+3	; 0x03
  98:	bc 81       	ldd	r27, Y+4	; 0x04
  9a:	01 96       	adiw	r24, 0x01	; 1
  9c:	a1 1d       	adc	r26, r1
  9e:	b1 1d       	adc	r27, r1
  a0:	89 83       	std	Y+1, r24	; 0x01
  a2:	9a 83       	std	Y+2, r25	; 0x02
  a4:	ab 83       	std	Y+3, r26	; 0x03
  a6:	bc 83       	std	Y+4, r27	; 0x04
  a8:	29 81       	ldd	r18, Y+1	; 0x01
  aa:	3a 81       	ldd	r19, Y+2	; 0x02
  ac:	4b 81       	ldd	r20, Y+3	; 0x03
  ae:	5c 81       	ldd	r21, Y+4	; 0x04
  b0:	8d 81       	ldd	r24, Y+5	; 0x05
  b2:	9e 81       	ldd	r25, Y+6	; 0x06
  b4:	af 81       	ldd	r26, Y+7	; 0x07
  b6:	b8 85       	ldd	r27, Y+8	; 0x08
  b8:	28 17       	cp	r18, r24
  ba:	39 07       	cpc	r19, r25
  bc:	4a 07       	cpc	r20, r26
  be:	5b 07       	cpc	r21, r27
  c0:	40 f3       	brcs	.-48     	; 0x92 <delay+0x26>
		;
}
  c2:	28 96       	adiw	r28, 0x08	; 8
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	f8 94       	cli
  c8:	de bf       	out	0x3e, r29	; 62
  ca:	0f be       	out	0x3f, r0	; 63
  cc:	cd bf       	out	0x3d, r28	; 61
  ce:	cf 91       	pop	r28
  d0:	df 91       	pop	r29
  d2:	08 95       	ret

000000d4 <main>:

int main(void) {
  d4:	df 93       	push	r29
  d6:	cf 93       	push	r28
  d8:	00 d0       	rcall	.+0      	; 0xda <main+0x6>
  da:	0f 92       	push	r0
  dc:	cd b7       	in	r28, 0x3d	; 61
  de:	de b7       	in	r29, 0x3e	; 62
	deviceToOperate currentDevice = LED_RED;
  e0:	19 82       	std	Y+1, r1	; 0x01
	/* Configure PD4->PD7 as output */
	DDRD |= (0xF << 4);
  e2:	a1 e3       	ldi	r26, 0x31	; 49
  e4:	b0 e0       	ldi	r27, 0x00	; 0
  e6:	e1 e3       	ldi	r30, 0x31	; 49
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	80 6f       	ori	r24, 0xF0	; 240
  ee:	8c 93       	st	X, r24

	/* Turn them off */
	PORTD |= (0xE << 4);
  f0:	a2 e3       	ldi	r26, 0x32	; 50
  f2:	b0 e0       	ldi	r27, 0x00	; 0
  f4:	e2 e3       	ldi	r30, 0x32	; 50
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	80 6e       	ori	r24, 0xE0	; 224
  fc:	8c 93       	st	X, r24

	for (;;) {
		switch (currentDevice) {
  fe:	89 81       	ldd	r24, Y+1	; 0x01
 100:	28 2f       	mov	r18, r24
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	3b 83       	std	Y+3, r19	; 0x03
 106:	2a 83       	std	Y+2, r18	; 0x02
 108:	8a 81       	ldd	r24, Y+2	; 0x02
 10a:	9b 81       	ldd	r25, Y+3	; 0x03
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	91 05       	cpc	r25, r1
 110:	69 f1       	breq	.+90     	; 0x16c <main+0x98>
 112:	2a 81       	ldd	r18, Y+2	; 0x02
 114:	3b 81       	ldd	r19, Y+3	; 0x03
 116:	22 30       	cpi	r18, 0x02	; 2
 118:	31 05       	cpc	r19, r1
 11a:	2c f4       	brge	.+10     	; 0x126 <main+0x52>
 11c:	8a 81       	ldd	r24, Y+2	; 0x02
 11e:	9b 81       	ldd	r25, Y+3	; 0x03
 120:	00 97       	sbiw	r24, 0x00	; 0
 122:	69 f0       	breq	.+26     	; 0x13e <main+0x6a>
 124:	67 c0       	rjmp	.+206    	; 0x1f4 <main+0x120>
 126:	2a 81       	ldd	r18, Y+2	; 0x02
 128:	3b 81       	ldd	r19, Y+3	; 0x03
 12a:	22 30       	cpi	r18, 0x02	; 2
 12c:	31 05       	cpc	r19, r1
 12e:	a9 f1       	breq	.+106    	; 0x19a <main+0xc6>
 130:	8a 81       	ldd	r24, Y+2	; 0x02
 132:	9b 81       	ldd	r25, Y+3	; 0x03
 134:	83 30       	cpi	r24, 0x03	; 3
 136:	91 05       	cpc	r25, r1
 138:	09 f4       	brne	.+2      	; 0x13c <main+0x68>
 13a:	46 c0       	rjmp	.+140    	; 0x1c8 <main+0xf4>
 13c:	5b c0       	rjmp	.+182    	; 0x1f4 <main+0x120>
		case LED_RED:
			PORTD ^= (1 << 5);
 13e:	a2 e3       	ldi	r26, 0x32	; 50
 140:	b0 e0       	ldi	r27, 0x00	; 0
 142:	e2 e3       	ldi	r30, 0x32	; 50
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	90 81       	ld	r25, Z
 148:	80 e2       	ldi	r24, 0x20	; 32
 14a:	89 27       	eor	r24, r25
 14c:	8c 93       	st	X, r24
			delay(10000);
 14e:	60 e1       	ldi	r22, 0x10	; 16
 150:	77 e2       	ldi	r23, 0x27	; 39
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
			PORTD ^= (1 << 5);
 15a:	a2 e3       	ldi	r26, 0x32	; 50
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	e2 e3       	ldi	r30, 0x32	; 50
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	90 81       	ld	r25, Z
 164:	80 e2       	ldi	r24, 0x20	; 32
 166:	89 27       	eor	r24, r25
 168:	8c 93       	st	X, r24
 16a:	44 c0       	rjmp	.+136    	; 0x1f4 <main+0x120>
			break;
		case LED_GREEN:
			PORTD ^= (1 << 6);
 16c:	a2 e3       	ldi	r26, 0x32	; 50
 16e:	b0 e0       	ldi	r27, 0x00	; 0
 170:	e2 e3       	ldi	r30, 0x32	; 50
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	90 81       	ld	r25, Z
 176:	80 e4       	ldi	r24, 0x40	; 64
 178:	89 27       	eor	r24, r25
 17a:	8c 93       	st	X, r24
			delay(10000);
 17c:	60 e1       	ldi	r22, 0x10	; 16
 17e:	77 e2       	ldi	r23, 0x27	; 39
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
			PORTD ^= (1 << 6);
 188:	a2 e3       	ldi	r26, 0x32	; 50
 18a:	b0 e0       	ldi	r27, 0x00	; 0
 18c:	e2 e3       	ldi	r30, 0x32	; 50
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	90 81       	ld	r25, Z
 192:	80 e4       	ldi	r24, 0x40	; 64
 194:	89 27       	eor	r24, r25
 196:	8c 93       	st	X, r24
 198:	2d c0       	rjmp	.+90     	; 0x1f4 <main+0x120>
			break;
		case LED_BLUE:
			PORTD ^= (1 << 7);
 19a:	a2 e3       	ldi	r26, 0x32	; 50
 19c:	b0 e0       	ldi	r27, 0x00	; 0
 19e:	e2 e3       	ldi	r30, 0x32	; 50
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	90 81       	ld	r25, Z
 1a4:	80 e8       	ldi	r24, 0x80	; 128
 1a6:	89 27       	eor	r24, r25
 1a8:	8c 93       	st	X, r24
			delay(10000);
 1aa:	60 e1       	ldi	r22, 0x10	; 16
 1ac:	77 e2       	ldi	r23, 0x27	; 39
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
			PORTD ^= (1 << 7);
 1b6:	a2 e3       	ldi	r26, 0x32	; 50
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e2 e3       	ldi	r30, 0x32	; 50
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	90 81       	ld	r25, Z
 1c0:	80 e8       	ldi	r24, 0x80	; 128
 1c2:	89 27       	eor	r24, r25
 1c4:	8c 93       	st	X, r24
 1c6:	16 c0       	rjmp	.+44     	; 0x1f4 <main+0x120>
			break;
		case Buzzer:
			PORTD ^= (1 << 4);
 1c8:	a2 e3       	ldi	r26, 0x32	; 50
 1ca:	b0 e0       	ldi	r27, 0x00	; 0
 1cc:	e2 e3       	ldi	r30, 0x32	; 50
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	90 81       	ld	r25, Z
 1d2:	80 e1       	ldi	r24, 0x10	; 16
 1d4:	89 27       	eor	r24, r25
 1d6:	8c 93       	st	X, r24
			delay(10000);
 1d8:	60 e1       	ldi	r22, 0x10	; 16
 1da:	77 e2       	ldi	r23, 0x27	; 39
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
			PORTD ^= (1 << 4);
 1e4:	a2 e3       	ldi	r26, 0x32	; 50
 1e6:	b0 e0       	ldi	r27, 0x00	; 0
 1e8:	e2 e3       	ldi	r30, 0x32	; 50
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	90 81       	ld	r25, Z
 1ee:	80 e1       	ldi	r24, 0x10	; 16
 1f0:	89 27       	eor	r24, r25
 1f2:	8c 93       	st	X, r24
			break;
		}
		currentDevice++;
 1f4:	89 81       	ldd	r24, Y+1	; 0x01
 1f6:	8f 5f       	subi	r24, 0xFF	; 255
 1f8:	89 83       	std	Y+1, r24	; 0x01
		if (currentDevice > Buzzer) {
 1fa:	89 81       	ldd	r24, Y+1	; 0x01
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	08 f4       	brcc	.+2      	; 0x202 <main+0x12e>
 200:	7e cf       	rjmp	.-260    	; 0xfe <main+0x2a>
			currentDevice = LED_RED;
 202:	19 82       	std	Y+1, r1	; 0x01
 204:	7c cf       	rjmp	.-264    	; 0xfe <main+0x2a>

00000206 <_exit>:
 206:	f8 94       	cli

00000208 <__stop_program>:
 208:	ff cf       	rjmp	.-2      	; 0x208 <__stop_program>
